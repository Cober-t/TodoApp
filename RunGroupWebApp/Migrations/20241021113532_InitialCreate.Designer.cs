// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Data;

#nullable disable

namespace TodoApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241021113532_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoApp.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            State = 0,
                            Title = "Learn English",
                            Value = 200
                        },
                        new
                        {
                            Id = 2,
                            State = 0,
                            Title = "Physically Base Render Book",
                            Value = 300
                        });
                });

            modelBuilder.Entity("TodoApp.Models.SubProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectID");

                    b.ToTable("SubProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectID = 1,
                            Title = "Present Continuous"
                        },
                        new
                        {
                            Id = 2,
                            ProjectID = 2,
                            Title = "Chapter 1"
                        },
                        new
                        {
                            Id = 3,
                            ProjectID = 2,
                            Title = "Chapter 2"
                        });
                });

            modelBuilder.Entity("TodoApp.Models.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SubProjectID");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = 0,
                            SubProjectID = 2,
                            Title = "Debug Test"
                        },
                        new
                        {
                            Id = 2,
                            Status = 0,
                            SubProjectID = 3,
                            Title = "Monte-Carlo Implementation 1"
                        },
                        new
                        {
                            Id = 3,
                            Status = 0,
                            SubProjectID = 3,
                            Title = "Monte-Carlo Implementation 2"
                        },
                        new
                        {
                            Id = 4,
                            Status = 0,
                            SubProjectID = 1,
                            Title = "Task 1"
                        },
                        new
                        {
                            Id = 5,
                            Status = 0,
                            SubProjectID = 1,
                            Title = "Task 2"
                        },
                        new
                        {
                            Id = 6,
                            Status = 0,
                            SubProjectID = 3,
                            Title = "Monte-Carlo Implementation 3"
                        });
                });

            modelBuilder.Entity("TodoApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsComplete")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TodoApp.Models.Project", b =>
                {
                    b.HasOne("TodoApp.Models.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TodoApp.Models.SubProject", b =>
                {
                    b.HasOne("TodoApp.Models.Project", null)
                        .WithMany("SubProjects")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoApp.Models.ToDo", b =>
                {
                    b.HasOne("TodoApp.Models.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.HasOne("TodoApp.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubProject");
                });

            modelBuilder.Entity("TodoApp.Models.Project", b =>
                {
                    b.Navigation("SubProjects");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TodoApp.Models.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
